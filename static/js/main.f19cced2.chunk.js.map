{"version":3,"sources":["components/TimerControl.js","components/Timer.js","components/SessionControl.js","App.js","index.js","alarm.mp3"],"names":["TimerControl","className","onClick","this","props","onStart","isRunning","onReset","Component","Timer","getTimerClass","classmod","timer","isBreak","min","sec","toString","padStart","SessionControl","disableBtn","isReset","slDecrease","disabled","sl","slIncrease","blDecrease","bl","blIncrease","App","playSound","src","Howl","play","state","setState","console","log","updateTimer","alarm","setBreak","myInterval","setInterval","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f19cced2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class TimerControl extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"timer-control\">\r\n        <button onClick={this.props.onStart} className=\"btn btn-inc\">\r\n          {this.props.isRunning ? \"Pause\" : \"Start\"}\r\n        </button>\r\n        <button onClick={this.props.onReset} className=\"btn btn-dec\">\r\n          Reset\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TimerControl from \"./TimerControl\";\r\n\r\nexport default class Timer extends Component {\r\n  render() {\r\n    let { min, sec } = this.props.timer;\r\n    min = min.toString().padStart(2, \"0\");\r\n    sec = sec.toString().padStart(2, \"0\");\r\n    return (\r\n      <>\r\n        <div className={this.getTimerClass()}>\r\n          <span>{min}</span>:<span>{sec}</span>\r\n        </div>\r\n\r\n        <TimerControl\r\n          onStart={this.props.onStart}\r\n          onReset={this.props.onReset}\r\n          isRunning={this.props.timer.isRunning}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n  getTimerClass = () => {\r\n    let classmod = \"timer \";\r\n    if (this.props.timer.isRunning && this.props.timer.isBreak) {\r\n      classmod += \"btn-dec\";\r\n    } else if (this.props.timer.isRunning && !this.props.timer.isBreak) {\r\n      classmod += \"btn-inc\";\r\n    }\r\n    return classmod;\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class SessionControl extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span className=\"session-group\">\r\n          <button\r\n            onClick={this.props.slDecrease}\r\n            className=\"btn btn-dec\"\r\n            disabled={this.disableBtn()}\r\n          >\r\n            &#8595;\r\n          </button>\r\n          <span className=\"session-control-group\">\r\n            <span>Session Length :</span>\r\n\r\n            <span>{this.props.timer.sl}</span>\r\n          </span>\r\n          <button\r\n            onClick={this.props.slIncrease}\r\n            className=\"btn btn-inc\"\r\n            disabled={this.disableBtn()}\r\n          >\r\n            &#8593;\r\n          </button>\r\n        </span>\r\n        <span className=\"session-group\">\r\n          <button\r\n            onClick={this.props.blDecrease}\r\n            className=\"btn btn-dec\"\r\n            disabled={this.disableBtn()}\r\n          >\r\n            &#8595;\r\n          </button>\r\n          <span className=\"session-control-group\">\r\n            <span>Break Length :</span>\r\n            <span>{this.props.timer.bl}</span>\r\n          </span>\r\n          <button\r\n            onClick={this.props.blIncrease}\r\n            className=\"btn btn-inc\"\r\n            disabled={this.disableBtn()}\r\n          >\r\n            &#8593;\r\n          </button>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n  disableBtn = () => {\r\n    if (!this.props.timer.isReset) {\r\n      return \"true\";\r\n    }\r\n    return \"\";\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\nimport Timer from \"./components/Timer\";\nimport SessionControl from \"./components/SessionControl\";\nimport { Howl, Howler } from \"howler\";\nimport alarm from \"./alarm.mp3\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n  playSound = (src) => {\n    const sound = new Howl({ src });\n    sound.play();\n  };\n  state = {\n    timer: {\n      min: 15,\n      sec: 0,\n      isRunning: false,\n      isReset: true,\n      isBreak: false,\n      sl: 15,\n      bl: 5,\n    },\n  };\n  componentDidMount() {\n    this.myInterval = setInterval(this.updateTimer, 1000);\n  }\n  render() {\n    return (\n      <div className=\"main-container\">\n        <h1>Pomodoro Clock</h1>\n        <SessionControl\n          timer={this.state.timer}\n          slIncrease={this.slIncrease}\n          slDecrease={this.slDecrease}\n          blIncrease={this.blIncrease}\n          blDecrease={this.blDecrease}\n        />\n        <Timer\n          timer={this.state.timer}\n          onStart={this.onStart}\n          onReset={this.onReset}\n        />\n      </div>\n    );\n  }\n\n  onStart = () => {\n    let timer = { ...this.state.timer };\n    timer.isRunning = !timer.isRunning;\n    if (timer.isReset) {\n      timer.isReset = !timer.isReset;\n    }\n    this.setState({ timer });\n    console.log(this.state.timer);\n  };\n\n  updateTimer = () => {\n    let timer = { ...this.state.timer };\n    if (timer.isRunning && (timer.min !== 0 || timer.sec !== 0)) {\n      if (timer.sec === 0 && timer.min > 0) {\n        timer.min -= 1;\n        timer.sec = 59;\n      } else {\n        timer.sec -= 1;\n      }\n    } else if (\n      timer.isRunning &&\n      timer.min === 0 &&\n      timer.sec === 0 &&\n      !timer.isBreak\n    ) {\n      timer.isBreak = true;\n      timer.min = timer.bl;\n      console.log(timer);\n      this.playSound(alarm);\n    } else if (\n      timer.isRunning &&\n      timer.min === 0 &&\n      timer.sec === 0 &&\n      timer.isBreak\n    ) {\n      timer.isBreak = false;\n      timer.min = timer.sl;\n      console.log(timer);\n      this.playSound(alarm);\n    }\n\n    this.setState({ timer });\n  };\n  onReset = () => {\n    let timer = { ...this.state.timer };\n    timer.min = timer.sl;\n    timer.sec = 0;\n    timer.isRunning = false;\n    timer.isReset = true;\n    timer.isBreak = false;\n    console.log(\"Reset CLicked\");\n    this.setState({ timer });\n  };\n\n  slIncrease = () => {\n    let timer = { ...this.state.timer };\n    if (timer.sl < 59) {\n      timer.sl += 1;\n    }\n    timer.min = timer.sl;\n    this.setState({ timer });\n  };\n  slDecrease = () => {\n    let timer = { ...this.state.timer };\n    if (timer.sl > 0) {\n      timer.sl -= 1;\n    }\n    timer.min = timer.sl;\n    this.setState({ timer });\n  };\n  blIncrease = () => {\n    let timer = { ...this.state.timer };\n    if (timer.bl < 59) {\n      timer.bl += 1;\n    }\n    this.setState({ timer });\n  };\n  blDecrease = () => {\n    let timer = { ...this.state.timer };\n    if (timer.bl > 0) {\n      timer.bl -= 1;\n    }\n    this.setState({ timer });\n  };\n  setBreak = () => {\n    let timer = { ...this.state.timer };\n    timer.isBreak = true;\n    timer.min = timer.bl;\n    console.log(timer);\n    this.setState({ timer });\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/alarm.1d4bf208.mp3\";"],"sourceRoot":""}